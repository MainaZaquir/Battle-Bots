{"ast":null,"code":"var _jsxFileName = \"/home/thenest/Moringa/Development/Code/code-challenges/Code-challenge-5/Battle-Bots/src/App.js\";\nimport React, { Component } from 'react';\nimport BotCollection from './components/BotCollection';\nimport BotArmy from './components/BotArmy';\nimport BotSpecs from './components/BotSpecs';\nimport SortBot from './components/SortBot';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.addBotToArmy = bot => {\n      // Checking if the army already includes a bot from the same class\n      if (!this.state.army.some(b => b.bot_class === bot.bot_class)) {\n        this.setState(prevState => ({\n          army: [...prevState.army, bot],\n          //Removing the bot from the BotCollection\n          bots: prevState.bots.filter(b => b.id !== bot.id)\n        }));\n      }\n    };\n    this.releaseBot = bot => {\n      this.setState(prevState => ({\n        army: prevState.army.filter(b => b.id !== bot.id),\n        // Adding the bot back to the BotCollection\n        bots: [...prevState.bots, bot]\n      }));\n    };\n    this.dischargeBot = bot => {\n      //Discharging the bot\n      // eslint-disable-next-line no-template-curly-in-string\n      fetch('http://localhost:3000/bots/${bot.id}', {\n        method: 'DELETE'\n      }).then(() => {\n        this.setState(prevState => ({\n          bots: prevState.bots.filter(b => b.id !== bot.id),\n          army: prevState.army.filter(b => b.id !== bot.id)\n        }));\n      });\n    };\n    this.selectBot = bot => {\n      //Setting the selected bot\n      this.setState({\n        selectedBot: bot\n      });\n    };\n    this.sortBot = criteria => {\n      //Sorting the bots\n      this.setState(prevState => ({\n        bots: prevState.bots.sort((a, b) => b[criteria] - a[criteria])\n      }));\n    };\n    this.filterBots = botClass => {\n      //Filtering the bots\n      this.setState(prevState => ({\n        bots: prevState.bots.filter(bot => bot.bot_class === botClass)\n      }));\n    };\n    this.state = {\n      bots: [],\n      army: [],\n      selectedBot: null\n    };\n\n    // Binding the function\n    this.addBotToArmy = this.addBotToArmy.bind(this);\n  }\n  componentDidMount() {\n    // Fetching the bots data from the JSON server and setting it to state\n    fetch('http://localhost:3000/bots').then(Response => Response.json()).then(bots => this.setState({\n      bots\n    }));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SortBot, {\n        sortBots: this.sortBot,\n        filterBots: this.filterBots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), this.state.selectedBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n        bot: this.state.selectedBot,\n        selectBot: this.selectBot,\n        addBotToArmy: this.addBotToArmy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(BotCollection, {\n        bots: this.state.bots,\n        selectBot: this.selectBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BotArmy, {\n        army: this.state.army,\n        releaseBot: this.releaseBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","BotCollection","BotArmy","BotSpecs","SortBot","jsxDEV","_jsxDEV","App","constructor","props","addBotToArmy","bot","state","army","some","b","bot_class","setState","prevState","bots","filter","id","releaseBot","dischargeBot","fetch","method","then","selectBot","selectedBot","sortBot","criteria","sort","a","filterBots","botClass","bind","componentDidMount","Response","json","render","children","sortBots","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/thenest/Moringa/Development/Code/code-challenges/Code-challenge-5/Battle-Bots/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport BotCollection from './components/BotCollection';\nimport BotArmy from './components/BotArmy';\nimport BotSpecs from './components/BotSpecs';\nimport SortBot from './components/SortBot';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bots: [],\n      army: [],\n      selectedBot: null\n    };\n\n    // Binding the function\n    this.addBotToArmy = this.addBotToArmy.bind(this);\n  }\n\n  componentDidMount() {\n    // Fetching the bots data from the JSON server and setting it to state\n    fetch('http://localhost:3000/bots')\n      .then(Response => Response.json())\n      .then(bots => this.setState({ bots }));\n  }\n\n  addBotToArmy = (bot) => {\n    // Checking if the army already includes a bot from the same class\n    if (!this.state.army.some(b => b.bot_class === bot.bot_class)) {\n      this.setState(prevState => ({\n        army: [...prevState.army, bot],\n        //Removing the bot from the BotCollection\n        bots: prevState.bots.filter(b => b.id !== bot.id)\n      }));\n    }\n  };\n\n  releaseBot = (bot) => {\n    this.setState(prevState => ({\n      army: prevState.army.filter(b => b.id !== bot.id),\n      // Adding the bot back to the BotCollection\n      bots: [...prevState.bots, bot]\n    }));\n  };\n\n  dischargeBot = (bot) => {\n    //Discharging the bot\n    // eslint-disable-next-line no-template-curly-in-string\n    fetch('http://localhost:3000/bots/${bot.id}', { method: 'DELETE' })\n      .then(() => {\n        this.setState(prevState => ({\n          bots: prevState.bots.filter(b => b.id !== bot.id),\n          army: prevState.army.filter(b => b.id !== bot.id)\n        }));\n      });\n  };\n\n  selectBot = (bot) => {\n    //Setting the selected bot\n    this.setState({ selectedBot: bot });\n  };\n\n  sortBot = (criteria) => {\n    //Sorting the bots\n    this.setState(prevState => ({\n      bots: prevState.bots.sort((a, b) => b[criteria] - a[criteria])\n    }));\n  };\n\n  filterBots = (botClass) => {\n    //Filtering the bots\n    this.setState(prevState => ({\n      bots: prevState.bots.filter(bot => bot.bot_class === botClass)\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <SortBot sortBots={this.sortBot} filterBots={this.filterBots} />\n        {this.state.selectedBot ? (\n          <BotSpecs bot={this.state.selectedBot} selectBot={this.selectBot} addBotToArmy={this.addBotToArmy} />\n        ) : (\n          <BotCollection bots={this.state.bots} selectBot={this.selectBot} />\n        )}\n        <BotArmy army={this.state.army} releaseBot={this.releaseBot} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}